// Sys.vm
// Student ID: 201860766

load Sys.vm,
{

// Sys.xor
function Sys.xor 0
    pop argument 1
    pop argument 0
    push argument 1
    not
    push argument 0
    not
    push argument 1
    and
    or
    return

// Sys.shiftLeft 2
function Sys.shiftLeft 2
    pop argument 1
    pop argument 0
    push argument 0
    pop local 0
    push argument 1
    pop local 1

label LOOP
    push local 1
    push constant 0
    eq
    push local 1
    push constant 0
    lt
    or
    if-goto END_LOOP

    push local 0
    push local 0
    add
    pop local 0

    push local 1
    push constant 1
    sub
    pop local 1

    goto LOOP

label END_LOOP
    push local 0
    return


// Sys.computeParity
    function Sys.computeParity 2
    pop argument 0
    push constant 0
    pop local 0
    
    push constant 0
    pop local 1

label BIT_LOOP
    push local 1
    push constant 15
    eq
    if-goto END_LOOP
    
    push constant 1
    push local 1
    call Sys.shiftLeft 2
    pop temp 0
    
    push argument 0
    push temp 0
    and
    push constant 0
    eq
    not
    
    if-goto BIT_SET
    goto BIT_NOT_SET

label BIT_SET
    push local 0
    push constant 1
    call Sys.xor 2
    pop local 0
    goto AFTER_SET

label BIT_NOT_SET

label AFTER_SET
    push local 1
    push constant 1
    add
    pop local 1
    goto BIT_LOOP

label END_LOOP
    push local 0
    return


// Sys.encode
    function Sys.encode 0
    pop argument 0
    
    push argument 0
    call Sys.computeParity 1
    
    push argument 0
    push constant 32767
    and
    
    pop temp 0
    pop temp 1
    
    push temp 1
    push constant 1
    eq
    if-goto SET_MSB
    goto SKIP_SET

label SET_MSB
    push temp 0
    push constant 32768
    or
    goto AFTER_SET

label SKIP_SET
    push temp 0

label AFTER_SET
    return

}
output;
