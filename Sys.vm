// Student ID: 201860766

// 1. Sys.xor
    push argument 0
    push argument 1
    and
    not
    
    push argument 0
    push argument 1
    or
    
    and
    return

// 2. Sys.shiftLeft
    push argument 0
    pop local 0           
    
    push argument 1
    pop local 1           
    
    label SHIFT_LOOP
    push local 1
    push constant 0
    eq
    if-goto END_SHIFT
    
    push local 0
    add
    pop local 0           
    
    push local 1
    push constant 1
    sub
    pop local 1           
    
    goto SHIFT_LOOP
    label END_SHIFT
    
    push local 0
    return

// 3. Sys.computeParity
    push constant 0
    pop local 0          
    
    push constant 0
    pop local 1          
    
    label PARITY_LOOP
    push local 1
    push constant 15
    eq
    if-goto END_PARITY

    push constant 1
    push local 1
    call Sys.shiftLeft 2
    pop local 2          

    push argument 0
    push local 2
    and
    push constant 0
    eq
    not
    if-goto BIT_SET
    
    goto NEXT_BIT
    
    label BIT_SET
    push local 0
    push constant 1
    call Sys.xor 2
    pop local 0           
    
    label NEXT_BIT
    push local 1
    push constant 1
    add
    pop local 1           
    
    goto PARITY_LOOP
    label END_PARITY
    
    push local 0
    return

// 4. Sys.encode
    push argument 0
    call Sys.computeParity 1
    pop local 0           

    push argument 0
    push constant 32767   
    and
    pop local 1           
    
    push local 0
    push constant 0
    eq
    if-goto NO_PARITY_SET
    
    push local 1
    push constant 32768   
    or
    pop local 1           
    
    label NO_PARITY_SET
    push local 1
    return

function Sys.init 0
    push constant 12
    push constant 6
    call Sys.xor 2
    
    push constant 6
    push constant 2
    call Sys.shiftLeft 2
    
    push constant 31
    call Sys.computeParity 1
    
    push constant 12345
    call Sys.encode 1
    
    return
